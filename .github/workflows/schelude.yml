name: Update Database

on:
  schedule:
    - cron: '0 0 1 * *' # Ejecuta el primer día de cada mes a medianoche UTC
  workflow_dispatch:

jobs:
  update-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run management commands
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_ENGINE: "django.db.backends.postgresql"
        run: |
          cd netflix
          MIGRATION_OUTPUT=$(python manage.py migrate --noinput)
          echo "$MIGRATION_OUTPUT"

          # Comprobamos si se aplicaron migraciones.
          if echo "$MIGRATION_OUTPUT" | grep -q "No migrations to apply."; then
            echo "No hay nuevas migraciones, no se ejecutarán las importaciones."
          else
            # Si hubo migraciones, ejecuta las importaciones.
            python manage.py import_movies
            python manage.py import_tv_shows
          fi
